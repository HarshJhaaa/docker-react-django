{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/component/Form.js\";\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { Button, Typography, TextField } from '@material-ui/core';\n\nfunction Form(props) {\n  const [message, setMessage] = useState([]);\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const validatonSchema = Yup.object({\n    username: Yup.string().required('Required'),\n    password: Yup.string().required('Required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: values => {\n      axios({\n        method: 'post',\n        url: 'http://hitlerway.pythonanywhere.com/auth/',\n        data: values\n      }).then(response => {\n        // console.log(response.data.token)\n        setLoggedIn(true);\n        {\n          props.userlogin(response.data.token);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    validatonSchema\n  });\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/greet',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Login to Reveal Mesg\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    onChange: formik.handleChange,\n    value: formik.values.username,\n    label: \"Enter Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Login\"))));\n}\n\nexport default Form;","map":{"version":3,"sources":["/app/frontend/src/component/Form.js"],"names":["React","useState","Link","Redirect","useFormik","axios","Yup","Button","Typography","TextField","Form","props","message","setMessage","isLoggedIn","setLoggedIn","validatonSchema","object","username","string","required","password","formik","initialValues","onSubmit","values","method","url","data","then","response","userlogin","token","catch","error","console","log","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport { useFormik } from 'formik'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport {Button,Typography,TextField} from '@material-ui/core'\n\nfunction Form(props) {\n\n  const [message,setMessage] = useState([])\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const  validatonSchema = Yup.object({\n    username: Yup.string().required('Required'),\n    password: Yup.string().required('Required')\n  })\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password:'',},\n\n    onSubmit: values =>{\n      axios({\n        method:'post',\n        url:'http://hitlerway.pythonanywhere.com/auth/',\n        data: values\n      })\n      .then((response)=>{\n        // console.log(response.data.token)\n        setLoggedIn(true);\n        {props.userlogin(response.data.token)}\n\n      })\n      .catch(function (error) {\n        console.log(error);\n        });\n\n    },\n    validatonSchema,\n  })\n  if(isLoggedIn){\n        return (<Redirect to={'/greet'}/>)\n    }\n  return (\n    <div>\n    <center>\n    <Typography variant = 'h2'>\n      Login to Reveal Mesg\n    </Typography>\n      <form onSubmit = {formik.handleSubmit} >\n              <TextField variant=\"outlined\" type = \"text\" name = \"username\" id = \"username\" onChange = {formik.handleChange} value = {formik.values.username} label = \"Enter Username\" />\n              <br></br>\n              <br></br>\n              <TextField variant=\"outlined\"  label = \"Password\" type = \"password\" name = \"password\" id = \"password\" onChange = {formik.handleChange} value = {formik.values.password}/>\n                <br></br>\n                <br></br>\n                <Button color = \"primary\" variant = \"outlined\" type = 'submit'>Login</Button>\n      </form>\n      </center>\n\n\n      </div>\n  );\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}